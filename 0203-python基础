1.元组
	a.定义
		元组和列表类似，小括号中包含元素，元素之间通过逗号进行分隔
		(12,3)
		('a','b','c')
	b.元组和列表的区别
		敏感信息传递给未知函数，希望这个数据不被修改，使用元组
		处理动态数据时候，经常更新使用列表
		元组不可变，列表可变
		元组速度快
	c.创建元组
		如果元组中只有一个元素，需要在后面增加逗号
	d.访问元组
		直接访问
		遍历访问
		成员访问
	e.元组的切片和索引
		和字符串一样
	f.删除元组
		del 删除整个元组
	g.补充
		len() 元素个数
		max() 最大值
		min() 最小值
		index() 元组中某个值第一次出现的索引
		count() 元组中某个元素出现个数
2.字典
	a.应用场景
		接口开发
		前后端数据传输
	b.创建字典
		字典是python中的映射数据类型
		大括号中键值对组成{'name':'gaga'}
		一般由字符串或者数字作为键
	c.访问字典
		直接访问
		数据筛选
	d.删除
		del
			删除指定元素 (键值对)
			删除整个字典 (不能访问)
		clear
			清空，可以访问
	e.修改字典
		通过筛选字典的键进行修改
	f.补充
		keys(键)
		values(值)
		items(键值对)

3.自动化测试环境搭建
	a.准备
		1>python安装包
		2>pycharm
		3>chrome浏览器
		4>webdriver驱动
		5>selenium驱动
	b.安装python
	c.安装pycharm
		1>下载
			https://download.jetbrains.8686c.com/python/pycharm-community-2020.3.3.exe
		2>安装
			傻瓜安装
		3>配置
			file--settings--project xxx--python interpreter--点击螺丝--add
			--existing xxx--点击...选择系统中的python.exe--OKX2
	d.chrome浏览器
	e.webdriver驱动
		1>查看浏览器的版本
			打开浏览器--帮助--关于 xxxx
			 88.0.4324.104
		2>下载chrome webdriver驱动
			http://npm.taobao.org/mirrors/chromedriver/
		3>解压后复制到python的安装路径下
	f.安装selenium模块
		win+r--cmd--pip install selenium
	g.测试代码
	#coding=utf-8
	#1.导入selenium模块中的webdriver驱动程序
	from selenium import webdriver
	#2.定义打开的浏览器类型
	br=webdriver.Chrome()
	#3.打开目标网站
	br.get("https://www.bilibili.com")
4.web自动化主流测试框架
	QTP/UFT
	selenium
	robot framework
5.selenium特点
	开源、免费
	多浏览器支持   firefox  chrome  ie  opera safari
	多平台支持     linux    windows  mac
	多语言支持     java  python  ruby  php c# js
	简单(api简单)，灵活(开发语言驱动)
	支持分布式测试用例执行
6.selenium定位元素方法
	a.查看页面元素信息
		右键元素--检查(开发者巩固)
	b.对元素的常见操作
		click()    点击
		clear()    清空
		send_keys() 发送(输入内容)
	c.id定位
		通过id的值进行元素的定位
	d.class定位
		通过class的值进行定位
	e.tag定位
		工作中使用较少，很难通过tag区分不同元素
	f.通过link定位
		专门定位文本链接，a标签
	g.通过partial_link进行定位
		超文本链接文字很长，全部输入浪费资源，使用部分文字进行模糊查询
	h.xpath定位
		理想状态下，页面中有id，class，超链接等等，实际情况不是，属性相同，页面都会变化
	i.css定位
		相对于xpath简洁，速度快
		


